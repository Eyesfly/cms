<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
  http://www.springframework.org/schema/task
    	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- 启用注解 -->
    <context:annotation-config />
    <!-- 注解扫描的包路径 -->
    <context:component-scan base-package="com.eyesfly"></context:component-scan>
<!-- redis-->
<!--
    <context:component-scan base-package="com.eyesfly.cache.redis" />
-->



    <!-- 添加配置文件 到spring上下文 -->
    <context:property-placeholder location="classpath*:config.properties" ignore-unresolvable="true"/>
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    <!-- ************** DataSource: dbcp 数据库配置**************** -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close" lazy-init="false">
        <property name="driverClassName" value="${dbcp.driverClassName}" />
        <property name="url" value="${dbcp.url}" />
        <property name="username" value="${dbcp.username}" />
        <property name="password" value="${dbcp.password}" />
        <property name="initialSize" value="${dbcp.initialSize}" />
        <property name="maxActive" value="${dbcp.maxActive}" />
      <!--  <property name="maxIdle" value="${dbcp.maxIdle}" />-->
        <property name="minIdle" value="${dbcp.minIdle}" />
        <property name="maxWait" value="${dbcp.maxWait}" />

        <!-- 用来检测有效sql -->
        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <property name="logAbandoned" value="${dbcp.logAbandoned}" />
        <property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
        <property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
        <property name="poolPreparedStatements" value="${dbcp.poolPreparedStatements}" />
    </bean>

    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="mapperLocations" value="classpath:xml/mapping/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.eyesfly.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 事物拦截的包路径 -->
    <aop:config>
        <aop:advisor pointcut="execution(* com.eyesfly.service.impl.*.*(..))"
                     advice-ref="txAdvice" />
    </aop:config>
    <!-- 事物拦截的类型 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="query*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="load*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
<!--    &lt;!&ndash; 创建spring jdbcTemplate&ndash;&gt;
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>-->
    <!-- 定时任务 -->
    <task:annotation-driven/>
    <!-- 添加配置文件 到spring上下文 -->






    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                               <prop key="kaptcha.border">no</prop>
                               <prop key="kaptcha.border.color">105,179,90</prop>
                               <prop key="kaptcha.textproducer.font.color">red</prop>
                               <prop key="kaptcha.image.width">250</prop>
                               <prop key="kaptcha.textproducer.font.size">80</prop>
                               <prop key="kaptcha.image.height">90</prop>
                               <prop key="kaptcha.session.key">code</prop>
                               <prop key="kaptcha.textproducer.char.length">4</prop>
                               <prop key="kaptcha.textproducer.char.space">5</prop>
                               <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
                               <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                     <!--   <prop key="kaptcha.textproducer.char.string">0123456789</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>-->
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>







    <import resource="classpath:spring-shiro.xml"/>
 <!--   <import resource="classpath:spring-redis.xml"/>-->
</beans>